{"version":3,"file":"workbox-17357acd.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-core/_private/DBWrapper.js","node_modules/workbox-core/_private/deleteDatabase.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-strategies/StaleWhileRevalidate.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n                // TODO: Assert is positive\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n                // TODO: Assert is positive\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in the Workbox APIs to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the used Cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} options.networkTimeoutSeconds If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: 'NetworkFirst',\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkFirst',\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, event, logs });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, event, logs });\n        promises.push(networkPromise);\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, event }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await this._respondFromCache({ request, event }));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, event }) {\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await this._respondFromCache({ request, event });\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this._cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this._cacheName}' cache.`);\n                }\n            }\n        }\n        else {\n            // Keep the service worker alive while we put the request in the cache\n            const responseClone = response.clone();\n            const cachePut = cacheWrapper.put({\n                cacheName: this._cacheName,\n                request,\n                response: responseClone,\n                event,\n                plugins: this._plugins,\n            });\n            if (event) {\n                try {\n                    // The event has been responded to so we can keep the SW alive to\n                    // respond to the request\n                    event.waitUntil(cachePut);\n                }\n                catch (err) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        return response;\n    }\n    /**\n     * Used if the network timeouts or fails to make the request.\n     *\n     * @param {Object} options\n     * @param {Request} request The request to match in the cache\n     * @param {Event} [options.event]\n     * @return {Promise<Object>}\n     *\n     * @private\n     */\n    _respondFromCache({ event, request }) {\n        return cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'StaleWhileRevalidate',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = this._getFromNetwork({ request, event });\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n            if (event) {\n                try {\n                    event.waitUntil(fetchAndCachePromise);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('StaleWhileRevalidate', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork({ request, event }) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: response.clone(),\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Force a service worker to activate immediately, instead of\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\n * for existing clients to close.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // We need to explicitly call `self.skipWaiting()` here because we're\n    // shadowing `skipWaiting` with this local function.\n    self.addEventListener('install', () => self.skipWaiting());\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","url","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","RegExpRoute","regExp","RegExp","result","exec","href","origin","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","params","route","findMatchingRoute","debugMessages","push","_defaultHandler","forEach","msg","err","reject","_catchHandler","catch","get","matchResult","length","undefined","setDefaultHandler","setCatchHandler","registerRoute","has","set","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","open","resolve","openRequestTimedOut","setTimeout","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","mode","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","id","_getId","put","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","executeQuotaErrorCallbacks","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","cacheKeyWillBeUsedPlugins","effectiveRequest","call","_isResponseSafeToCache","response","responseToCache","pluginsUsed","pluginMethod","Response","matchWrapper","matchOptions","putWrapper","updatePlugins","oldResponse","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","strategyStart","strategyName","printFinalResponse","cacheOkAndOpaquePlugin","cacheWillUpdate","NetworkFirst","options","isUsingCacheWillUpdate","some","_plugins","_networkTimeoutSeconds","networkTimeoutSeconds","_fetchOptions","_matchOptions","logs","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","_respondFromCache","clearTimeout","responseClone","cachePut","CacheFirst","_getFromNetwork","cachePutPromise","StaleWhileRevalidate","fetchAndCachePromise","skipWaiting","clientsClaim","clients","claim"],"mappings":"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"}